CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-error=deprecated-declarations")
FILE(GLOB UTILS_LIB_HEAD ${CMAKE_CURRENT_SOURCE_DIR}/*.hpp ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

# FILE(GLOB UTILS_LIB_SRC ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/*.cc ${CMAKE_CURRENT_SOURCE_DIR}/${TARGET_HARDWARE}/*.c)
# ADD_LIBRARY(utils SHARED  ${UTILS_LIB_SRC})
# TARGET_INCLUDE_DIRECTORIES(utils PUBLIC
# ${PROJECT_INCLUDE_DIR}
# ${PROJECT_INCLUDE_DIR}/utils
# )
# TARGET_LINK_LIBRARIES(utils module_logger)

# transfer all headers to the include directory
FILE(MAKE_DIRECTORY ${PROJECT_INCLUDE_DIR}/utils)

FOREACH(include ${UTILS_LIB_HEAD})
	MESSAGE("-- Copying ${include}")
	CONFIGURE_FILE(${include} ${PROJECT_INCLUDE_DIR}/utils COPYONLY)
ENDFOREACH()

# INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
# DESTINATION ${CMAKE_INSTALL_PREFIX}/include/utils
# FILES_MATCHING
# PATTERN "*.h"
# PATTERN "*.hpp" EXCLUDE
# PATTERN "CMakeLists.txt" EXCLUDE
# )

# INSTALL(TARGETS utils
# ARCHIVE DESTINATION lib
# LIBRARY DESTINATION lib
# RUNTIME DESTINATION bin)
